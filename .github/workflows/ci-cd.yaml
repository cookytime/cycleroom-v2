
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:14
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/cycleroom/requirements.txt

      - name: Linting with flake8
        run: |
          pip install flake8
          flake8 src/cycleroom --max-line-length=88

      - name: Run Unit Tests with Pytest
        env:
          DATABASE_URL: postgres://test_user:test_password@localhost:5432/test_db
        run: |
          pytest --maxfail=1 --disable-warnings --cov=src/cycleroom

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push FastAPI Image
        run: |
          docker build -t cycleroom/fastapi-app:latest -f docker/Dockerfile.fastapi .
          docker tag cycleroom/fastapi-app:latest ${{ secrets.DOCKER_USERNAME }}/cycleroom-fastapi:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/cycleroom-fastapi:latest

      - name: Build and Push Visualization Image
        run: |
          docker build -t cycleroom/visualization:latest -f docker/Dockerfile.visualization .
          docker tag cycleroom/visualization:latest ${{ secrets.DOCKER_USERNAME }}/cycleroom-visualization:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/cycleroom-visualization:latest

  deploy-staging:
    runs-on: ubuntu-latest
    needs: docker-build
    environment:
      name: staging
      url: https://staging.cycleroom.example.com
    permissions:
      contents: read
      deployments: write

    steps:
      - name: Deploy to Staging
        run: echo "Deploying to Staging..."

  deploy-production:
    runs-on: ubuntu-latest
    needs: docker-build
    environment:
      name: production
      url: https://cycleroom.example.com
    permissions:
      contents: read
      deployments: write

    steps:
      - name: Deploy to Production
        run: echo "Deploying to Production..."
